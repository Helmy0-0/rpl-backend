// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id_user   String      @id @default(cuid())
  id_tenant String?
  tenant    Tenant?     @relation(fields: [id_tenant], references: [id_tenant])
  email     String      @unique
  username  String
  password  String
  role      ROLE
  rent_data Rent_Data[]
  deleted   Boolean     @default(false)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Tenant {
  id_tenant  String   @id @default(cuid())
  ktp_image  String
  addres     String
  no_ktp     String
  status     STATUS
  no_telp    String
  user       user[]
  deleted    Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Rent_Data {
  id_rent    String   @id @default(cuid())
  id_user    String
  user       user     @relation(fields: [id_user], references: [id_user])
  id_room    String
  room       Room     @relation(fields: [id_room], references: [id_room])
  rent_date  DateTime
  rent_out   DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Report     Report[]
}

model Room {
  id_room    String      @id @default(cuid())
  roomtype   String
  status     ROOMSTATUS
  Rent_Data  Rent_Data[]
  deleted    Boolean     @default(false)
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
}

model RoomType {
  id_roomtype String   @id @default(cuid())
  room_type   String
  deleted     Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Report {
  id_report           String       @id @default(cuid())
  id_rent             String
  id_facility         String
  report_desc         String
  report_date         DateTime
  report_status       REPORTSTATUS
  deleted             Boolean      @default(false)
  created_at          DateTime     @default(now())
  updated_at          DateTime     @updatedAt
  facility            Facility?    @relation(fields: [id_facility], references: [id_facility])
  Rent_Data           Rent_Data?   @relation(fields: [rent_DataId_rent], references: [id_rent])
  rent_DataId_rent    String?
  facilityId_facility String?
}

model Facility {
  id_facility   String   @id @default(cuid())
  facility_name String
  desc          String
  report        Report[]
  deleted       Boolean  @default(false)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

enum STATUS {
  SINGLE
  MARRIED
}

enum ROLE {
  ADMIN
  TENANT
}

enum ROOMSTATUS {
  AVAILABLE
  NOTAVAILABLE
}

enum REPORTSTATUS {
  PENDING
  SUCCESS
}
