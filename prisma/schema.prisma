generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id_user    String    @id @default(cuid())
  name       String
  password   String
  role       ROLE
  phone      String    @unique
  deleted    Boolean   @default(false)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  tenants    Tenant[]
  finances   Finance[]
}

model Tenant {
  id_tenant  String    @id @default(cuid())
  userId     String
  full_name  String
  address    String
  no_ktp     String
  status     STATUS
  no_telp    String
  deleted    Boolean   @default(false)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  user       User      @relation(fields: [userId], references: [id_user])
  rentData   RentData?
  reports    Report[]
  finances   Finance[]
}

model RentData {
  id_rent    String    @id @default(cuid())
  tenantId   String    @unique
  roomId     String
  rent_date  DateTime
  rent_out   DateTime?
  deleted    Boolean   @default(false)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  tenant     Tenant    @relation(fields: [tenantId], references: [id_tenant])
  room       Room      @relation(fields: [roomId], references: [id_room])
  finances   Finance[]
}

model Room {
  id_room     String      @id @default(cuid())
  id_roomtype  String
  status      ROOMSTATUS
  deleted     Boolean     @default(false)
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt

  roomType    RoomType    @relation(fields: [id_roomtype], references: [id_roomtype])
  rentData    RentData[]
}

model RoomType {
  id_roomtype String   @id @default(cuid())
  room_type   String
  price       Int
  deleted     Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  rooms       Room[]
}

model Report {
  id_report   String       @id @default(cuid())
  tenantId    String
  facilityId  String
  report_desc String
  report_date DateTime
  status      REPORTSTATUS
  deleted     Boolean      @default(false)
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt

  tenant      Tenant       @relation(fields: [tenantId], references: [id_tenant])
  facility    Facility     @relation(fields: [facilityId], references: [id_facility])
}

model Facility {
  id_facility   String   @id @default(cuid())
  facility_name String
  desc          String
  deleted       Boolean  @default(false)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  reports       Report[]
}

model Finance {
  id_finance   String    @id @default(cuid())
  tenantId     String?
  rentId       String?
  userId       String?
  type         INOUT
  category     String
  amount       Int
  payment_date DateTime
  deleted      Boolean   @default(false)
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt

  tenant       Tenant?   @relation(fields: [tenantId], references: [id_tenant])
  rentData     RentData? @relation(fields: [rentId], references: [id_rent])
  user         User?     @relation(fields: [userId], references: [id_user])
}

enum STATUS {
  SINGLE
  MARRIED
}

enum ROLE {
  ADMIN
  TENANT
}

enum ROOMSTATUS {
  AVAILABLE
  NOTAVAILABLE
}

enum REPORTSTATUS {
  PENDING
  SUCCESS
}

enum INOUT {
  INCOME
  OUTCOME
}
